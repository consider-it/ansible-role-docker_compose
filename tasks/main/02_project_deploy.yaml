- name: Create list of currently deployed projects
  block:
    - name: Get all currently deployed project directories
      ansible.builtin.find:
        paths: /ansible_docker_compose/projects/
        file_type: directory
        recurse: false
      become: true
      register: docker_compose__current_project_directories

    - name: Set variable for holding currently deployed projects intially to an empty list
      ansible.builtin.set_fact:
        docker_compose__current_projects: []

    - name: Get project names from project directory paths
      ansible.builtin.set_fact:
        docker_compose__current_projects: "{{ docker_compose__current_projects + [ item.path | basename ] }}"  # noqa: jinja[spacing]
      loop: "{{ docker_compose__current_project_directories.files }}"

- name: Run docker compose down for all projects
  ansible.builtin.command:
    cmd: /usr/bin/docker compose --project-directory "/ansible_docker_compose/projects/{{ item }}" --project-name "{{ item }}" down
    chdir: "/ansible_docker_compose/projects/{{ item }}"
  loop: "{{ docker_compose__current_projects }}"
  become: true
  changed_when: true

- name: Create list of desired projects
  block:
    - name: Set variable for holding desired projects initially to an empty list
      ansible.builtin.set_fact:
        docker_compose__desired_projects: []

    - name: Get project names from docker_compose__projects, which got supplied by the user
      ansible.builtin.set_fact:
        docker_compose__desired_projects: "{{ docker_compose__desired_projects + [ item.name ] }}"  # noqa: jinja[spacing]
      loop: "{{ docker_compose__projects }}"

- name: Remove projects, which are to be removed
  block:
    - name: Create list of projects to be removed
      ansible.builtin.set_fact:
        docker_compose__projects_to_be_removed: "{{ docker_compose__current_projects | difference(docker_compose__desired_projects) }}"

    - name: Remove projects
      ansible.builtin.file:
        path: "/ansible_docker_compose/projects/{{ item }}"
        state: absent
      loop: "{{ docker_compose__projects_to_be_removed }}"
      become: true

# Rsync is configured to make the destination directory match the source
# directory.
# Note that owner, group and modification times aren't kept, while permissions
# and symlinks are.
- name: Deploy desired projects, adding new ones and updating existing ones
  ansible.posix.synchronize:
    src: "{{ item.files_directory }}/"
    dest: "/ansible_docker_compose/projects/{{ item.name }}"
    mode: push
    archive: false
    copy_links: false
    delete: true
    dirs: false
    existing_only: false
    recursive: true
    owner: false
    group: false
    perms: true
    links: true
    times: false
    verify_host: true
  loop: "{{ docker_compose__projects }}"
  become: true

- name: Run docker compose up for all projects
  ansible.builtin.command:
    cmd: /usr/bin/docker compose --project-directory "/ansible_docker_compose/projects/{{ item }}" --project-name "{{ item }}" up --detach --pull always --build --force-recreate  # noqa: yaml[line-length]
    chdir: "/ansible_docker_compose/projects/{{ item }}"
  loop: "{{ docker_compose__desired_projects }}"
  become: true
  changed_when: true
